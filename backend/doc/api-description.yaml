openapi: 3.0.0
info:
  title: CKM Timing API
  version: 1.0.0
tags:
- name: System
  description: Endpoints of system health and configuration.
- name: Events
  description: Information about available events.
- name: Santos Endurance Event
  description: Endpoints for endurance events in Karting Los Santos.
paths:
  /token/validate:
    get:
      summary: Validates whether the X-Request-Id token is valid or not.
      tags:
      - System
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      role:
                        type: string
  /events:
    get:
      summary: Returns list of available events to monitor.
      tags:
      - Events
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventGet'
    post:
      summary: Creates a new event.
      tags:
      - Events
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SantosEnduranceEventPost'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/stats:
    get:
      summary: Returns the current stats of the event.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventStatGet'
  /events/{event-name}/stats/{stat-name}:
    get:
      summary: Returns the current stats of the event.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: stat-name
        in: path
        required: true
        description: Name of the parameter to obtain its values.
        schema:
          type: string
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/EventStatGet'
    put:
      summary: Updates the value of a specific stat.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: stat-name
        in: path
        required: true
        description: Name of the parameter to obtain its values.
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventStatPut'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/timing/all/{timing-type}/{limit}:
    get:
      summary: Returns the live timing information w/o the real positions.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: timing-type
        in: path
        required: true
        description: If "onlap", it returns the live timing positions. If "real", it returns the positions taking into account the remaining stops.
        schema:
          type: string
          enum: ['onlap', 'real']
      - name: limit
        in: path
        required: false
        description: Optionally limit to the latest <number> of times.
        schema:
          type: integer
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimingTeamGet'
  /events/{event-name}/timing/teams/{team-name}/{limit}:
    get:
      summary: Returns the teams and their timing data.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: team-name
        in: path
        required: true
        description: Name of the team (must be url encoded).
        schema:
          type: string
      - name: limit
        in: path
        required: false
        description: Optionally limit to the latest <number> of times.
        schema:
          type: integer
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimingTeamGet'
  /events/{event-name}/timing:
    post:
      summary: Adds a lap time of a driver/team in the event.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimingItemPost'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/teams/:
    get:
      summary: Returns the teams and their data.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TeamGet'
    post:
      summary: Adds a new team.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPost'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/teams/{team-name}:
    get:
      summary: Returns a team data.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: team-name
        in: path
        required: true
        description: Name of the team (must be url encoded).
        schema:
          type: string
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/TeamGet'
    put:
      summary: Updates a team data.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: team-name
        in: path
        required: true
        description: Name of the team (must be url encoded).
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPut'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/teams/{team-name}/{driver-name}:
    get:
      summary: Returns a driver data.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: team-name
        in: path
        required: true
        description: Name of the team (must be url encoded).
        schema:
          type: string
      - name: driver-name
        in: path
        required: true
        description: Name of the driver (must be url encoded).
        schema:
          type: string
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/DriverGet'
    put:
      summary: Updates a driver data.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: team-name
        in: path
        required: true
        description: Name of the team (must be url encoded).
        schema:
          type: string
      - name: driver-name
        in: path
        required: true
        description: Name of the driver (must be url encoded).
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverPut'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/karts-box/{kart-action}/{limit}:
    get:
      summary: Returns the latest karts to enter to box.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: kart-action
        in: path
        required: true
        description: If "in", it indicates that the kart has entered to the box. Otherwise, if the kart has left the box, it must be "out".
        schema:
          type: string
          enum: ['in', 'out']
      - name: limit
        in: path
        required: false
        description: Optionally limit to the latest <number> karts.
        schema:
          type: integer
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/KartBoxGet'
  /events/{event-name}/karts-box/{kart-action}:
    post:
      summary: Adds a kart which has entered/left to the box.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: kart-action
        in: path
        required: true
        description: If "in", it indicates that the kart has entered to the box. Otherwise, if the kart has left the box, it must be "out".
        schema:
          type: string
          enum: ['in', 'out']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KartBoxPost'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/karts-box/probs:
    get:
      summary: Returns the probabilities of getting a kart from box.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/KartProbGet'
    post:
      summary: Adds the probability of getting a kart from box.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KartProbPost'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
    put:
      summary: Updates the probability of getting a kart from box.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KartProbPut'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/configuration:
    get:
      summary: Returns configuration values.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      race_length:
                        type: string
                      race_length_unit:
                        type: string
                      reference_top_teams:
                        type: string
  /events/{event-name}/configuration/{config-name}:
    put:
      summary: Returns configuration values.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: config-name
        in: path
        required: true
        description: Name of the configuration item.
        schema:
          type: string
          enum: ['track_name', 'event_type', 'race_length', 'race_length_unit', 'reference_top_teams']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
  /events/{event-name}/health:
    get:
      summary: Returns health of components of backend.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      event_status:
                        $ref: '#/components/schemas/HealthItemGet'
                      event_stage:
                        $ref: '#/components/schemas/HealthItemGet'
                      database_connection:
                        $ref: '#/components/schemas/HealthItemGet'
                      crawler_internet:
                        $ref: '#/components/schemas/HealthItemGet'
                      crawler_apex:
                        $ref: '#/components/schemas/HealthItemGet'
                      crawler_parse_teams:
                        $ref: '#/components/schemas/HealthItemGet'
                      crawler_parse_drivers:
                        $ref: '#/components/schemas/HealthItemGet'
                      crawler_parse_timing:
                        $ref: '#/components/schemas/HealthItemGet'
                      batch_karts_box_probs:
                        $ref: '#/components/schemas/HealthItemGet'
                      batch_karts_status:
                        $ref: '#/components/schemas/HealthItemGet'
                      batch_time_references:
                        $ref: '#/components/schemas/HealthItemGet'
  /events/{event-name}/health/{health-category}/{health-name}:
    put:
      summary: Updates the status of an element.
      tags:
      - Santos Endurance Event
      parameters:
      - $ref: '#/components/parameters/HeaderRequestID'
      - $ref: '#/components/parameters/EventName'
      - name: health-category
        in: path
        required: true
        description: Category of the health item.
        schema:
          type: string
      - name: health-name
        in: path
        required: true
        description: Name of the health item.
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthItemPut'
      responses:
        '200':
          description: Correct response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object

components:
  parameters:
    HeaderRequestID:
      in: header
      name: X-Request-Id
      description: Works as auth token to use the API endpoints.
      schema:
        type: string
      required: true
    EventName:
      in: path
      name: event-name
      description: Name of the event (must be url encoded).
      required: true
      schema:
        type: string
  schemas:
    SantosEnduranceEventPost:
      allOf:
      - $ref: '#/components/schemas/EventPost'
      - type: object
        properties:
          configuration:
            type: object
            properties:
              race_length:
                type: string
              race_length_unit:
                type: string
              reference_top_teams:
                type: string
    EventGet:
      allOf:
      - type: object
        properties:
          id:
            type: integer
      - $ref: '#/components/schemas/EventPost'
    EventPost:
      type: object
      properties:
        name:
          type: string
          example: Resistencia Los Santos 26-06-2020
        track_name:
          type: string
          enum: [santos]
          example: santos
        event_type:
          type: string
          enum: [endurance]
          example: endurance
    DriverPost:
      type: object
      properties:
        name:
          type: string
    DriverPut:
      type: object
      properties:
        reference_time_offset:
          type: integer
        time_driving:
          type: integer
    DriverGet:
      allOf:
      - type: object
        properties:
          id:
            type: integer
      - $ref: '#/components/schemas/DriverPost'
      - $ref: '#/components/schemas/DriverPut'
      - type: object
        properties:
          update_date:
            $ref: '#/components/schemas/Datetime'
    TeamGet:
      allOf:
      - type: object
        properties:
          id:
            type: integer
      - $ref: '#/components/schemas/TeamPost'
      - type: object
        properties:
          drivers:
            type: array
            items:
              $ref: '#/components/schemas/DriverGet'
          update_date:
            $ref: '#/components/schemas/Datetime'
    TeamPut:
      type: object
      properties:
        reference_time_offset:
          type: integer
    TeamPost:
      allOf:
      - type: object
        properties:
          name:
            type: string
          number:
            type: integer
          drivers:
            type: array
            items:
              $ref: '#/components/schemas/DriverPost'
      - $ref: '#/components/schemas/TeamPut'
    TimingItemPost:
      type: object
      properties:
        position:
          type: integer
          minimum: 1
        team_name:
          type: string
        driver_name:
          type: string
        time:
          type: integer
        gap:
          type: integer
        number_stops:
          type: integer
    TimingTeamGet:
      type: object
      properties:
        position:
          type: integer
          minimum: 1
        team_name:
          type: string
        team_number:
          type: integer
        team_reference_time_offset:
          type: integer
        driver_name:
          type: string
        driver_reference_time_offset:
          type: integer
        driver_driving_time:
          type: integer
        lap:
          type: integer
        time:
          type: integer
        gap:
          type: integer
        stage:
          $ref: '#/components/schemas/Stage'
        number_stops:
          type: integer
        is_stop:
          type: boolean
        kart_status:
          type: string
          enum: ['unknown', 'good', 'medium', 'bad']
        kart_status_guess:
          type: string
          enum: ['good', 'medium', 'bad']
        forced_kart_status:
          type: string
          enum: ['good', 'medium', 'bad']
        update_date:
          $ref: '#/components/schemas/Datetime'
    KartBoxGet:
      allOf:
      - $ref: '#/components/schemas/KartBoxPost'
      - type: object
        properties:
          update_date:
            $ref: '#/components/schemas/Datetime'
    KartBoxPut:
      type: object
      properties:
        kart_status:
          type: string
          enum: ['unknown', 'good', 'medium', 'bad']
        forced_kart_status:
          type: string
          enum: ['good', 'medium', 'bad']
    KartBoxPost:
      allOf:
      - $ref: '#/components/schemas/KartBoxPut'
      - type: object
        properties:
          team_name:
            type: string
          kart_status:
            type: string
            enum: ['unknown', 'good', 'medium', 'bad']
          kart_status_guess:
            type: string
            enum: ['good', 'medium', 'bad']
          forced_kart_status:
            type: string
            enum: ['good', 'medium', 'bad']
    KartProbGet:
      allOf:
      - $ref: '#/components/schemas/KartProbPost'
      - type: object
        properties:
          update_date:
            $ref: '#/components/schemas/Datetime'
    KartProbPut:
      type: object
      properties:
        step:
          type: integer
        kart_status:
          type: string
          enum: ['unknown', 'good', 'medium', 'bad']
        probability:
          type: number
          format: float
    KartProbPost:
      type: object
      properties:
        step:
          type: integer
        kart_status:
          type: string
          enum: ['unknown', 'good', 'medium', 'bad']
        probability:
          type: number
          format: float
    HealthItemGet:
      allOf:
      - type: object
        properties:
          category:
            type: string
          name:
            type: string
          update_date:
            $ref: '#/components/schemas/Datetime'
      - $ref: '#/components/schemas/HealthItemSimple'
    HealthItemPut:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    EventStatGet:
      allOf:
      - type: object
        properties:
          name:
            type: string
          update_date:
            $ref: '#/components/schemas/Datetime'
      - $ref: '#/components/schemas/EventStatPut'
    EventStatPut:
      type: object
      properties:
        value:
          type: string
    Stage:
      type: string
      enum: ['classification', 'race']
    Datetime:
      type: string
      pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
